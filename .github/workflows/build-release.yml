name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]



jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ./project
      run: npm ci

    - name: Build application
      working-directory: ./project
      run: npm run build

    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: ./project
      run: npm run dist-win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./project
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      working-directory: ./project
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-artifacts
        path: |
          project/electron-dist/*.exe
          project/electron-dist/*.exe.blockmap
          project/electron-dist/latest.yml

    - name: Upload artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-artifacts
        path: |
          project/electron-dist/*.AppImage
          project/electron-dist/latest-linux.yml

    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-artifacts
        path: |
          project/electron-dist/*.dmg
          project/electron-dist/latest-mac.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-artifacts/*
          linux-artifacts/*
          macos-artifacts/*
        body: |
          ## Değişiklikler
          - Otomatik güncelleme sistemi aktif
          - Yeni özellikler ve hata düzeltmeleri
          
          ## Kurulum
          - Windows: `.exe` dosyasını indirin ve çalıştırın
          - Linux: `.AppImage` dosyasını indirin ve çalıştırılabilir yapın
          - macOS: `.dmg` dosyasını indirin ve kurun
          
          ## Otomatik Güncelleme
          Bu sürümden itibaren uygulama otomatik olarak güncellenecektir.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 