name: Build and Release

on:
  push:
    branches:
      - main   # sadece main branch push'larında çalışır
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Clear electron-builder cache
        shell: pwsh
        run: Remove-Item -Recurse -Force "$env:LOCALAPPDATA\electron-builder\Cache" -ErrorAction SilentlyContinue

      - name: Bump version
        id: bump_version
        shell: pwsh
        run: |
          $oldVersion = (Get-Content package.json | ConvertFrom-Json).version
          npm version patch --no-git-tag-version
          $newVersion = (Get-Content package.json | ConvertFrom-Json).version
          echo "old_version=$oldVersion" >> $env:GITHUB_OUTPUT
          echo "new_version=$newVersion" >> $env:GITHUB_OUTPUT

      - name: Build application
        run: npm run build

      - name: Build Windows exe
        run: npx electron-builder --win --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_HARD_LINKS: false

      - name: List build output
        shell: pwsh
        run: |
          echo "Listing electron-dist directory:"
          if (Test-Path "electron-dist") { 
            Get-ChildItem -Path "electron-dist" -Recurse | Select-Object FullName, Length
          } else { 
            echo "electron-dist directory does not exist"
          }
          echo "Current directory contents:"
          Get-ChildItem -Path "." | Select-Object Name, Mode

      - name: Create Git Tag
        if: ${{ hashFiles('electron-dist/*.exe') != '' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin v${{ steps.bump_version.outputs.new_version }}

      - name: Create GitHub Release
        if: ${{ hashFiles('electron-dist/*.exe') != '' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
          files: |
            electron-dist/*.exe
          generate_release_notes: true
          draft: false
          prerelease: false